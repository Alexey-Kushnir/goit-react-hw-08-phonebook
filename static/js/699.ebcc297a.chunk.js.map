{"version":3,"file":"static/js/699.ebcc297a.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactItem/ContactsItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionStyled = styled.div`\n  width: 400px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: bold;\n  padding-top: 10px;\n  margin: 0 0 20px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <Title>{title}</Title>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]).isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled(Form)`\n  /* height: 200px; */\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 10px;\n`;\n\nexport const InputName = styled.label`\n  font-size: 20px;\n  font-weight: normal;\n  margin: 10px 10px 10px 0px;\n`;\n\nexport const InputValue = styled(Field)`\n  height: 22px;\n  font-size: 16px;\n`;\n\nexport const SubmitButton = styled.button`\n  font-size: 14px;\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Container,\n  InputName,\n  InputValue,\n  SubmitButton,\n} from './ContactsForm.styled';\nimport { selectContacts, addContact } from 'reduxFiles';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    return resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <Container autoComplete=\"off\">\n        <InputName htmlFor={'name'}>Name</InputName>\n        <InputValue\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <InputName htmlFor={'number'}>Phone</InputName>\n        <InputValue\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <SubmitButton type=\"submit\">Ad contact</SubmitButton>\n      </Container>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: unset;\n`;\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  font-size: 22px;\n  font-weight: normal;\n`;\n\nexport const DeleteButton = styled.button`\n  font-size: 14px;\n  cursor: pointer;\n  margin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Contact, DeleteButton } from './ContactsItem.styled';\nimport { deleteContact } from 'reduxFiles';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Contact>\n      {name}: {number}\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteButton>\n    </Contact>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useContacts } from 'hooks';\nimport { List } from './ContactsList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactsList = () => {\n  const visibleContacts = useContacts();\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.label`\n  width: 100%;\n  font-size: 20px;\n  font-weight: normal;\n  margin: 10px 10px 10px 0px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 22px;\n  font-size: 16px;\n  margin-left: 12px;\n  margin-top: 10px;\n  width: 200px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterTitle, FilterInput } from './Filter.styled';\nimport { setFilter } from 'reduxFiles';\nimport { useFilter } from 'hooks';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  // const filter = useSelector(selectFilter);\n  const filter = useFilter();\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterTitle>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={onChange} />\n    </FilterTitle>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Section } from 'components/Section/Section';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  selectContacts,\n  fetchContacts,\n  selectIsLoading,\n  selectError,\n} from 'reduxFiles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <Section title=\"Phonebook\">\n        <ContactsForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <>\n          {isLoading && !error && <p>Loading contacts...</p>}\n          {error && <p>{error}</p>}\n          {contacts.length > 0 && (\n            <>\n              <Filter />\n              <ContactsList />\n            </>\n          )}\n        </>\n      </Section>\n    </div>\n  );\n}\n"],"names":["SectionStyled","styled","Title","Section","title","children","Container","Form","InputName","InputValue","Field","SubmitButton","ContactsForm","dispatch","useDispatch","contacts","useSelector","selectContacts","initialValues","name","number","onSubmit","resetForm","find","contact","toLowerCase","alert","addContact","autoComplete","htmlFor","type","pattern","required","List","Contact","DeleteButton","ContactItem","id","onClick","deleteContact","ContactsList","visibleContacts","useContacts","length","map","FilterTitle","FilterInput","Filter","filter","useFilter","value","onChange","e","setFilter","target","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}