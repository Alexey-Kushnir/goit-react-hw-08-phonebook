{"version":3,"file":"static/js/674.410ab6c8.chunk.js","mappings":"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","sources":["components/Section.jsx","components/ContactsForm.jsx","components/ContactItem.jsx","components/ContactsList.jsx","components/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Typography, Container } from '@mui/material';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Container sx={{ padding: '0 20px', margin: '50 auto', width: 400 }}>\n      <Typography\n        variant=\"h2\"\n        sx={{\n          // color: 'red',\n          fontSize: 30,\n          fontWeight: 'bold',\n          paddingTop: '40px',\n          margin: '0 0 20px 0',\n        }}\n      >\n        {title}\n      </Typography>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]).isRequired,\n};\n","import { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, addContact } from 'reduxFiles';\nimport { Button, TextField } from '@mui/material';\nimport { toast } from 'react-hot-toast';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n\n    onSubmit: ({ name, number }, { resetForm }) => {\n      if (\n        contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      ) {\n        return toast.error(`${name} is already in contacts.`);\n      }\n      dispatch(addContact({ name, number }));\n      toast.success('Contact successfully created!');\n      return resetForm();\n    },\n  });\n\n  return (\n    <>\n      <form\n        onSubmit={formik.handleSubmit}\n        autoComplete=\"off\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          gap: '10px',\n        }}\n      >\n        <TextField\n          label=\"Name\"\n          size=\"small\"\n          sx={{ height: 22, fontSize: 16, mb: '20px', minWidth: '352px' }}\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          label=\"Phone\"\n          size=\"small\"\n          sx={{ height: 22, fontSize: 16, mb: '20px', minWidth: '352px' }}\n          type=\"tel\"\n          name=\"number\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"medium\"\n          sx={{\n            fontSize: '14px',\n            marginLeft: '10px',\n            fontWeight: 'bold',\n            ml: 0,\n          }}\n        >\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'reduxFiles';\nimport { Button, Typography } from '@mui/material';\nimport { toast } from 'react-hot-toast';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.success(`Contact ${name} was deleted.`);\n  };\n\n  return (\n    <li>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Typography\n          variant=\"body1\"\n          sx={{\n            fontSize: '22px',\n            fontWeight: 'normal',\n          }}\n        >\n          {name}: {number}\n        </Typography>\n        <Button\n          onClick={handleDelete}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"secondary\"\n          sx={{\n            fontSize: '10px',\n            fontWeight: 'normal',\n            marginLeft: 'auto',\n          }}\n        >\n          Delete\n        </Button>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useContacts } from 'hooks';\nimport { ContactItem } from 'components/ContactItem';\n\nexport const ContactsList = () => {\n  const visibleContacts = useContacts();\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <ul style={{ listStyle: 'none', padding: 'unset' }}>\n          {visibleContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'reduxFiles';\nimport { useFilter } from 'hooks';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useFilter();\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Find contacts by name\"\n        size=\"small\"\n        sx={{ height: 22, fontSize: 16, mb: '15px', minWidth: '352px' }}\n        variant=\"outlined\"\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Typography } from '@mui/material';\nimport { Section } from 'components/Section';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\n\nimport {\n  selectContacts,\n  fetchContacts,\n  selectIsLoading,\n  selectError,\n} from 'reduxFiles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Section title=\"Phonebook\">\n        <ContactsForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <>\n          {error && <p>{error}</p>}\n          {contacts.length > 0 && (\n            <>\n              <Filter />\n              {isLoading && !error ? (\n                <Typography variant=\"h6\" sx={{ m: '40px 0' }}>\n                  Loading contacts...\n                </Typography>\n              ) : (\n                <ContactsList />\n              )}\n            </>\n          )}\n        </>\n      </Section>\n    </div>\n  );\n}\n"],"names":["Section","title","children","Container","sx","padding","margin","width","Typography","variant","fontSize","fontWeight","paddingTop","ContactsForm","dispatch","useDispatch","contacts","useSelector","selectContacts","formik","useFormik","initialValues","name","number","onSubmit","resetForm","find","contact","toLowerCase","toast","addContact","handleSubmit","autoComplete","style","display","flexDirection","alignItems","gap","TextField","label","size","height","mb","minWidth","type","value","values","onChange","handleChange","pattern","required","Button","marginLeft","ml","ContactItem","id","onClick","deleteContact","color","ContactsList","visibleContacts","useContacts","length","listStyle","map","Filter","filter","useFilter","e","setFilter","target","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","justifyContent","Helmet","m"],"sourceRoot":""}